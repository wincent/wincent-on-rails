-# TODO: atom link
-content_for :css do
  =stylesheet_link_tag 'issues'
-@page_title = "#{@issue.kind_string} \##{@issue.id.to_s}: #{@issue.summary}"
%h1.major="#{@issue.kind_string} \##{@issue.id.to_s}"
-# TODO: simplistic (blind) previous/next links
-form_for @issue do |form|
  %table[@issue]
    -if admin?
      %tr
        %th Kind
        %td
          -if admin?
            =ajax_select form, :kind, underscores_to_spaces(Issue::KIND).sort
          -else
            @issue.kind_string
    %tr
      %th Summary
      %td
        %strong=h @issue.summary
    %tr
      %th Product
      %td
        -if admin?
          =ajax_select form, :product_id, product_options, :include_blank => true
        -else
          =link_to @issue.product.name, product_path(@issue.product)
    %tr
      %th When
      %td=timeinfo @issue
    %tr
      %th Status
      %td
        -if admin?
          =ajax_select form, :status, Issue::STATUS
        -else
          =@issue.status_string
    %tr
      %th Reporter
      %td=link_to @issue.user.display_name, user_path(@issue.user)
    %tr
      %th Description
      %td=preserve @issue.description.w
    -if admin?
      %tr
        %th Public?
        %td=ajax_check_box form, :public
%h2.major Comments
%table.issue
  -for comment in @comments
    %tr{ :class => "comment #{cycle('even', 'odd')}", :id => "comment_#{comment.id}" }
      %th{ :class => comment.public? ? nil : 'private' }
        =link_to_user comment.user
        %br
        =pluralizing_count(comment.user.utterances_count, 'post') if comment.user
        %br
        %span.when=timeinfo_for_comment comment
      %td=preserve comment.body.w
%h2.major Add a comment
=render :partial => 'comments/comment'
.links
  =link_to 'all issues', issues_path
  =link_to "all #{@issue.product.name} issues", issues_path(:product => @issue.product.name) if @issue.product
  =link_to "all #{@issue.status_string.downcase} issues", issues_path(:status => @issue.status_string)
  =link_to "all #{@issue.kind_string.pluralize.downcase}", issues_path(:kind => @issue.kind_string)
