-if @issue.public?
  -atom_link @issue
-content_for :css do
  =stylesheet_link_tag 'issues'
-@page_title = "#{@issue.kind_string} \##{@issue.id.to_s}: #{@issue.summary}"
#breadcrumbs
  =link_to 'Home', root_path
  &raquo;
  =link_to 'Issues', issues_path
  &raquo;
  ="#{@issue.kind_string} \##{@issue.id.to_s}"
%div{ :class => 'issue' + (@issue.public ? '' : ' private'), :id => "issue_#{@issue.id}" }
  %h1.major="#{@issue.kind_string} \##{@issue.id.to_s}"
  .prev_next
    =link_to_prev_issue if @prev
    =link_to_next_issue if @next
  -form_for @issue do |form|
    %table.main
      -if admin?
        %tr
          %th Kind
          %td
            -if admin?
              =ajax_select form, :kind, underscores_to_spaces(Issue::KIND).sort
            -else
              @issue.kind_string
      %tr
        %th Summary
        %td
          -if admin?
            =in_place_editor_field :issue, :summary
          -else
            %strong=h @issue.summary
      %tr
        %th Product
        %td
          -if admin?
            =ajax_select form, :product_id, product_options, :include_blank => true
          -else
            =link_to_product_issues @issue.product
      %tr
        %th When
        %td=timeinfo @issue
      %tr
        %th Status
        %td
          -if admin?
            =ajax_select form, :status, Issue::STATUS
          -else
            =@issue.status_string
      %tr
        %th Reporter
        %td=link_to_user @issue.user
      %tr
        %th
          Description
          -if admin?
            %br
            =link_to 'edit', edit_issue_path(@issue)
        %td=@issue.description.w
      -if admin?
        %tr
          %th Public?
          %td=ajax_check_box form, :public
      %tr
        %th
          Tags
          -if admin?
            %br
            =link_to 'edit', edit_issue_path(@issue)
        %td=tag_links(@issue)
%h2.major Comments
%table.issue
  -for comment in @comments
    %tr{ :class => "comment #{cycle('even', 'odd')}" + (comment.public? ? '' : ' private'), :id => "comment_#{comment.id}" }
      %th
        =link_to_user comment.user
        %br
        =pluralizing_count(comment.user.utterances_count, 'post') if comment.user
        %br
        %span.when=timeinfo comment, :updated_string => 'edited'
        -if admin?
          %br
          =link_to 'edit', edit_comment_path(comment)
          -# TODO: add a means of marking individual comments as private
      %td=comment.body.w
%h2.major Add a comment
=render :partial => 'comments/comment'
.links
  =link_to 'all issues', issues_path
  =link_to "all #{@issue.product.name} issues", issues_path(:product => @issue.product.name) if @issue.product
  =link_to "all #{@issue.status_string.downcase} issues", issues_path(:status => @issue.status_string)
  =link_to "all #{@issue.kind_string.pluralize.downcase}", issues_path(:kind => @issue.kind_string)
  -if admin?
    =link_to 'edit', edit_issue_path(@issue)
    =link_to 'destroy', issue_path(@issue), :method => :delete, :confirm => 'Really destroy this issue?'
