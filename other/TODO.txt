acts_as_rateable
"was this article helpful for you?":
- yes, very helpful
- somewhat helpful
- no, not helpful

do I need to support multiple weblogs?
- on the old site I had news, personal, mini-log, quicklinks, git-log,
  nightlies log
- on the new site it may be simpler to just have one weblog
- and add separate model/controller for git-log (basically have to do
  that anyway because it won't use wikitext markup)
- mini-log, not sure if it can go away
- quicklinks most definitely can go away as it is effectively abandoned
- might replace mini-log with twitter model and controller
- nightlies is essential, not sure what to do with that
- and not sure whether the separation of the news and personal
  weblogs is essential or not

comments on wiki articles:
- better might be the "rateable" idea above with optional feedback textarea

wikitext cheatsheet:
- should mention that bug #12 in PRE or similar can get pretty ugly
- the solution is to use an entity: &#x0023; for the hash

UI bug:
- if you mark a blog post as non-public there is no way to get to its edit page
- but it's not really non-public: it's just omitted from the index
- you can get to it by navigating to the URL

Bug:
- try to create wiki article and fail validation, any tags you set won't appear in the form

full-text search:
- still not convinced that I am doing this the right way
- acts_as_sphinx looks like the best contender
- but i am not sure about access control in that case; can sphinx handle that?
- i guess I just have to test this thing in the staging environment with a _lot_ of data

events:
- add "Event" model
- will record things like "user created", "confirmation sent" etc
- probably using Observers
- for admin only
- will provide an overview of what's been happening
- alert me to possible abuse

mailing list imports:
- list model
- user has many lists through subscriptions
- subscription model can go into suspended state if we get too many bounces

confirm that admin-only AJAX actions are being protected by HTTP Basic auth (I think they are, but just in case)

welcome email to imported users only:
- User.find :all, :conditions => [ 'created_at < ?', Time.now ]
- welcome emailer sends message
- visit URL to choose new passphrase
- but URL expires, so go to login page and click: forgotten password/reset password

