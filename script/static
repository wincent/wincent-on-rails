#!/usr/bin/env ruby

# Usage: script/static [page title] [input template] [output file]
#        script/static forbidden app/views/public/404.html.haml public/404.html

require 'rubygems'
require 'bundler'
Bundler.setup
require 'haml'
require 'ostruct'

class View
  attr_accessor :source, :engine, :output

  def initialize path
    self.source = File.read path
    self.engine = Haml::Engine.new(self.source, :format => :html5)
  end

  @@sections = {}
  def content_for section = nil, &block
    if block_given? # capturing content
      @@sections[section] = capture_haml &block
    else            # returning content
      @@sections
    end
  end
end

template = View.new ARGV[1]
template.output = template.engine.render(template)

layout = View.new 'app/views/layouts/static.haml'
layout.output = layout.engine.render(layout) do |yielded|
  case yielded
  when :title
    template.content_for[:title]
  when :content
    template.output
  end
end

File.open(ARGV[2], 'w') do |f|
  f.puts layout.output
end
