#!/usr/bin/env ruby

# Usage: script/static [input template] [output file]
#        script/static app/views/public/404.html.haml public/404.html

require 'rubygems'
require 'bundler'
Bundler.setup
require 'haml'
require 'ostruct'
require 'yaml'

if ARGV.length != 2 or ARGV.any? { |a| a.nil? }
  raise ArgumentError, "bad args: #{ARGV.inspect}"
end

class View
  attr_accessor :source, :engine, :output

  def initialize path
    self.source = File.read path
    self.engine = Haml::Engine.new(source, format: :html5, ugly: true)
    @sections = {}
  end

  def content_for section = nil, &block
    if block_given? # capturing content
      @sections[section] = capture_haml &block
    else            # returning content
      @sections
    end
  end

  def render &block
    self.engine.render self, &block
  end
end

# TODO: teach static to insert latest application.css URL

APP_CONFIG = YAML.load_file 'config/app_config.yml'
template = View.new ARGV[0]
template.output = template.render

layout = View.new 'app/views/layouts/static.haml'
layout.output = layout.render do |*yielded|
  case yielded.first
  when :title
    template.content_for[:title]
  else
    template.output
  end
end

File.open(ARGV[1], 'w') do |f|
  f.puts layout.output
end
